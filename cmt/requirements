package config

################################################################################

author  Reiner.Hauser@cern.ch,Igor.Soloviev@cern.ch
manager Igor.Soloviev@cern.ch,Haimo.Zobernig@cern.ch

################################################################################

use OnlinePolicy
use ers
use owl
use Boost * TDAQCExternal

# For the python bindings
use Python * TDAQCExternal


################################################################################

apply_pattern   install_jar name=config         files=config.jar

################################################################################

private

library         config                          "*.cpp"
macro           config_libraries                "config"
macro           config_shlibflags               "-lers -lboost_thread-$(boost_libsuffix)"


application     config_dump                     ../test/config_dump.cpp
macro           config_dumplinkopts             "-lconfig"
macro           config_dump_dependencies        config

application     config_time_test                ../test/config_time_test.cpp
macro           config_time_testlinkopts        "-lconfig -lowl"
macro           config_time_test_dependencies   config

application     config_test_object              ../test/config_test_object.cpp
macro           config_test_objectlinkopts      "-lconfig"
macro           config_test_object_dependencies config

application     config_subscriber               ../test/config_subscriber.cpp
macro           config_subscriberlinkopts       "-lconfig"
macro           config_subscriber_dependencies  config

application     config_test_rw                  ../test/config_test_rw.cpp
macro           config_test_rwlinkopts          "-lconfig"
macro           config_test_rw_dependencies     config

#Uncomment the following lines to build the python embedding example app.
#application     config_test_embedding              ../src/python/embedding.cpp
#macro           config_test_embeddinglinkopts      "-lconfig -l$(Python_version_headers) -lboost_python-$(boost_libsuffix) "
#macro           config_test_embedding_dependencies config pyconfig

macro_prepend   classpath                       "$(bin)java/config.jar:"
macro_append    classpath                       ":$(CLASSPATH)"

apply_pattern   build_jar name=config           src_dir=../jsrc/config         \
                                                sources=*.java

apply_pattern   build_jar name=j_config_dump    src_dir="../jbin"              \
                                                sources=config_dump.java

macro           j_config_dump.jar_dependencies  "config.jar"


library         pyconfig                        python/config.cpp
macro_append    pyconfig_pp_cppflags            " -Wno-unused "
macro_append    pyconfig_shlibflags             " -lconfig -lboost_python-$(boost_libsuffix) "
macro_append    pyconfig_dependencies           " config "

#Adding the installation location to the PYTHONPATH environment variable.
path_prepend    PYTHONPATH                      "${prefix}/share/lib/python"

#Setting the source files location and target dir.
apply_pattern   install_dir                     src_dir="../python"            \
                                                target_dir="share/lib/python"  \
                                                dir="config"                   \
                                                mask="*.py"

################################################################################

macro sw.repository.binary.config_dump:name     "Dump Config Database"

macro sw.repository.java.config.jar:name        "config jar"
macro sw.repository.java.config.jar:description "contains classes providing abstract interface to database information"
macro sw.repository.java.config.jar:help.url    "http://atlas-tdaq-sw.web.cern.ch/atlas-tdaq-sw/doxygen/tdaq/production/html/ConfigPackages.html"

################################################################################

apply_pattern   javadoc name=config             src_dir=../jsrc

################################################################################

macro           configlibs                      "libconfig.so libpyconfig.so"

apply_pattern	  install_libs                    files=$(configlibs)

apply_pattern   install_apps                    files="config_dump"

################################################################################

apply_pattern   check_target name=a             file="../cmt/test.sh"          \
                                                args="$(bin)"

apply_pattern   check_target name=py            file="../cmt/pytest.sh"        \
                                                args="$(bin)"

macro config_check_py_dependencies              config_check_a

################################################################################
