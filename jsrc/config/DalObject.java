package config;

  /**
   *  The <b>DalObject</b> interface is used to describe base methods of any class generated by genconfig.
   *  The interface is extended by each interface generated by genconfig for database classes and is implemented
   *  by generated *_Impl.java classes.
   *
   *  @author  http://consult.cern.ch/xwho/people/432778
   *  @since   online release 00-21-00
   */

public interface DalObject {

   /** Returns database object identity. */

  String UID();


   /** Returns name of the database object class. */

  String class_name();


   /**
    *  Re-read object from implementation.
    */

  void update() throws config.GenericException, config.NotFoundException, config.NotValidException, config.SystemException;


   /**
    *  Mark DAL object as non-read.
    *  If the parameter is <b>false</b>, then the implementation object remains untaught (that is useful for parameter substitution).
    *  Otherwise the implementation object is cleared and the object will be re-read from implementation on next access.
    */

  void unread(boolean clear_implementation_object);


   /** Method to return config object. */

  config.ConfigObject config_object();


   /** Method to return configuration object. */

  config.Configuration configuration_object();


   /**
    *  Method to print out values of attributes and relationships.
    *  @param dx string for left margin (for a formatted output)
    */

  void print(String dx) throws config.NotFoundException, config.NotValidException, config.SystemException;


    /** Set implementation attributes. */

  void init_config_params(config.Configuration db, config.ConfigObject obj, String id);

}
